// Import external libraries
'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

// Import Soundworks modules (server side)

var _soundworksServer = require('soundworks/server');

var _soundworksServer2 = _interopRequireDefault(_soundworksServer);

// Import modules written for Soundfield

var _PlayerPerformanceJs = require('./PlayerPerformance.js');

var _PlayerPerformanceJs2 = _interopRequireDefault(_PlayerPerformanceJs);

var _SoloistPerformanceJs = require('./SoloistPerformance.js');

var _SoloistPerformanceJs2 = _interopRequireDefault(_SoloistPerformanceJs);

// Instantiate the modules
var express = require('express');
var path = require('path');
var server = _soundworksServer2['default'].server;var setup = new _soundworksServer2['default'].Setup();
setup.generate('surface', { height: 1, width: 1 });
var locator = new _soundworksServer2['default'].Locator({ setup: setup });
var playerPerformance = new _PlayerPerformanceJs2['default']();
var soloistPerformance = new _SoloistPerformanceJs2['default'](playerPerformance);

// Launch server
var app = express();
var dir = path.join(process.cwd(), 'public');
server.start(app, dir, process.env.PORT || 3000);

// Map modules to client types
server.map('player', setup, locator, playerPerformance);
server.map('soloist', setup, soloistPerformance);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9zZXJ2ZXIvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztnQ0FLdUIsbUJBQW1COzs7Ozs7bUNBSVosd0JBQXdCOzs7O29DQUN2Qix5QkFBeUI7Ozs7O0FBVHhELElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNuQyxJQUFNLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7QUFJN0IsSUFBTSxNQUFNLEdBQUcsOEJBQVcsTUFBTSxDQUFDLEFBT2pDLElBQU0sS0FBSyxHQUFHLElBQUksOEJBQVcsS0FBSyxFQUFFLENBQUM7QUFDckMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ25ELElBQU0sT0FBTyxHQUFHLElBQUksOEJBQVcsT0FBTyxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7QUFDekQsSUFBTSxpQkFBaUIsR0FBRyxzQ0FBdUIsQ0FBQztBQUNsRCxJQUFNLGtCQUFrQixHQUFHLHNDQUF1QixpQkFBaUIsQ0FBQyxDQUFDOzs7QUFHckUsSUFBTSxHQUFHLEdBQUcsT0FBTyxFQUFFLENBQUM7QUFDdEIsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDL0MsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxDQUFDOzs7QUFHakQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBQ3hELE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLEtBQUssRUFBRSxrQkFBa0IsQ0FBQyxDQUFDIiwiZmlsZSI6InNyYy9zZXJ2ZXIvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnQgZXh0ZXJuYWwgbGlicmFyaWVzXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxuLy8gSW1wb3J0IFNvdW5kd29ya3MgbW9kdWxlcyAoc2VydmVyIHNpZGUpXG5pbXBvcnQgc2VydmVyU2lkZSBmcm9tICdzb3VuZHdvcmtzL3NlcnZlcic7XG5jb25zdCBzZXJ2ZXIgPSBzZXJ2ZXJTaWRlLnNlcnZlcjtcblxuLy8gSW1wb3J0IG1vZHVsZXMgd3JpdHRlbiBmb3IgU291bmRmaWVsZFxuaW1wb3J0IFBsYXllclBlcmZvcm1hbmNlIGZyb20gJy4vUGxheWVyUGVyZm9ybWFuY2UuanMnO1xuaW1wb3J0IFNvbG9pc3RQZXJmb3JtYW5jZSBmcm9tICcuL1NvbG9pc3RQZXJmb3JtYW5jZS5qcyc7XG5cbi8vIEluc3RhbnRpYXRlIHRoZSBtb2R1bGVzXG5jb25zdCBzZXR1cCA9IG5ldyBzZXJ2ZXJTaWRlLlNldHVwKCk7XG5zZXR1cC5nZW5lcmF0ZSgnc3VyZmFjZScsIHsgaGVpZ2h0OiAxLCB3aWR0aDogMSB9KTtcbmNvbnN0IGxvY2F0b3IgPSBuZXcgc2VydmVyU2lkZS5Mb2NhdG9yKHsgc2V0dXA6IHNldHVwIH0pO1xuY29uc3QgcGxheWVyUGVyZm9ybWFuY2UgPSBuZXcgUGxheWVyUGVyZm9ybWFuY2UoKTtcbmNvbnN0IHNvbG9pc3RQZXJmb3JtYW5jZSA9IG5ldyBTb2xvaXN0UGVyZm9ybWFuY2UocGxheWVyUGVyZm9ybWFuY2UpO1xuXG4vLyBMYXVuY2ggc2VydmVyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBkaXIgPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ3B1YmxpYycpO1xuc2VydmVyLnN0YXJ0KGFwcCwgZGlyLCBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDApO1xuXG4vLyBNYXAgbW9kdWxlcyB0byBjbGllbnQgdHlwZXNcbnNlcnZlci5tYXAoJ3BsYXllcicsIHNldHVwLCBsb2NhdG9yLCBwbGF5ZXJQZXJmb3JtYW5jZSk7XG5zZXJ2ZXIubWFwKCdzb2xvaXN0Jywgc2V0dXAsIHNvbG9pc3RQZXJmb3JtYW5jZSk7XG4iXX0=