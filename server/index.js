// Import external libraries
'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

// Import Soundworks modules (server side)

var _soundworksServer = require('soundworks/server');

var _soundworksServer2 = _interopRequireDefault(_soundworksServer);

// Import modules written for Soundfield

var _PlayerPerformanceJs = require('./PlayerPerformance.js');

var _PlayerPerformanceJs2 = _interopRequireDefault(_PlayerPerformanceJs);

var _SoloistPerformanceJs = require('./SoloistPerformance.js');

var _SoloistPerformanceJs2 = _interopRequireDefault(_SoloistPerformanceJs);

// Instantiate the modules
var express = require('express');
var path = require('path');
var server = _soundworksServer2['default'].server;var setup = new _soundworksServer2['default'].Setup();
setup.generate('surface', { height: 1, width: 1 });
var locator = new _soundworksServer2['default'].Locator({ setup: setup });
var playerPerformance = new _PlayerPerformanceJs2['default']();
var soloistPerformance = new _SoloistPerformanceJs2['default']();

// Launch server
var app = express();
var dir = path.join(process.cwd(), 'public');
server.start(app, dir, process.env.PORT || 3000);

// Map modules to client types
server.map('player', setup, locator, playerPerformance);
server.map('soloist', soloistPerformance);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2JpL0Rldi9jb2xsZWN0aXZlLXNvdW5kd29ya3MtZGV2ZWxvcC9zb3VuZGZpZWxkL3NyYy9zZXJ2ZXIvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztnQ0FLdUIsbUJBQW1COzs7Ozs7bUNBSVosd0JBQXdCOzs7O29DQUN2Qix5QkFBeUI7Ozs7O0FBVHhELElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNuQyxJQUFNLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7QUFJN0IsSUFBTSxNQUFNLEdBQUcsOEJBQVcsTUFBTSxDQUFDLEFBT2pDLElBQU0sS0FBSyxHQUFHLElBQUksOEJBQVcsS0FBSyxFQUFFLENBQUM7QUFDckMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ25ELElBQU0sT0FBTyxHQUFHLElBQUksOEJBQVcsT0FBTyxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7QUFDekQsSUFBTSxpQkFBaUIsR0FBRyxzQ0FBdUIsQ0FBQztBQUNsRCxJQUFNLGtCQUFrQixHQUFHLHVDQUF3QixDQUFDOzs7QUFHcEQsSUFBTSxHQUFHLEdBQUcsT0FBTyxFQUFFLENBQUM7QUFDdEIsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDL0MsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxDQUFDOzs7QUFHakQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBQ3hELE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLGtCQUFrQixDQUFDLENBQUMiLCJmaWxlIjoiL1VzZXJzL3JvYmkvRGV2L2NvbGxlY3RpdmUtc291bmR3b3Jrcy1kZXZlbG9wL3NvdW5kZmllbGQvc3JjL3NlcnZlci9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydCBleHRlcm5hbCBsaWJyYXJpZXNcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG4vLyBJbXBvcnQgU291bmR3b3JrcyBtb2R1bGVzIChzZXJ2ZXIgc2lkZSlcbmltcG9ydCBzZXJ2ZXJTaWRlIGZyb20gJ3NvdW5kd29ya3Mvc2VydmVyJztcbmNvbnN0IHNlcnZlciA9IHNlcnZlclNpZGUuc2VydmVyO1xuXG4vLyBJbXBvcnQgbW9kdWxlcyB3cml0dGVuIGZvciBTb3VuZGZpZWxkXG5pbXBvcnQgUGxheWVyUGVyZm9ybWFuY2UgZnJvbSAnLi9QbGF5ZXJQZXJmb3JtYW5jZS5qcyc7XG5pbXBvcnQgU29sb2lzdFBlcmZvcm1hbmNlIGZyb20gJy4vU29sb2lzdFBlcmZvcm1hbmNlLmpzJztcblxuLy8gSW5zdGFudGlhdGUgdGhlIG1vZHVsZXNcbmNvbnN0IHNldHVwID0gbmV3IHNlcnZlclNpZGUuU2V0dXAoKTtcbnNldHVwLmdlbmVyYXRlKCdzdXJmYWNlJywgeyBoZWlnaHQ6IDEsIHdpZHRoOiAxIH0pO1xuY29uc3QgbG9jYXRvciA9IG5ldyBzZXJ2ZXJTaWRlLkxvY2F0b3IoeyBzZXR1cDogc2V0dXAgfSk7XG5jb25zdCBwbGF5ZXJQZXJmb3JtYW5jZSA9IG5ldyBQbGF5ZXJQZXJmb3JtYW5jZSgpO1xuY29uc3Qgc29sb2lzdFBlcmZvcm1hbmNlID0gbmV3IFNvbG9pc3RQZXJmb3JtYW5jZSgpO1xuXG4vLyBMYXVuY2ggc2VydmVyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBkaXIgPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ3B1YmxpYycpO1xuc2VydmVyLnN0YXJ0KGFwcCwgZGlyLCBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDApO1xuXG4vLyBNYXAgbW9kdWxlcyB0byBjbGllbnQgdHlwZXNcbnNlcnZlci5tYXAoJ3BsYXllcicsIHNldHVwLCBsb2NhdG9yLCBwbGF5ZXJQZXJmb3JtYW5jZSk7XG5zZXJ2ZXIubWFwKCdzb2xvaXN0Jywgc29sb2lzdFBlcmZvcm1hbmNlKTtcbiJdfQ==